import fileAdmin as fa

import numpy as np

from utils2 import filterEEG
from utils2 import segmentingEpochs, getSpectrum
from utils2 import plotSpectrum, plotEEG


path = "C:/Users/enfil/Documents/GitHub/mentalink/talleres/Taller_2/scripts/dataset" #directorio donde estan los datos
sujetos = [1,2,3,4,5,6,7,8] #sujetos 1 y 2
sujeto = sujetos[2]

setSubjects = fa.loadData(path = path, subjects = sujetos)

#Conociendo mis datos
print(type(setSubjects[f"s{sujeto}"])) #tipo de datos del sujeto 1

print(setSubjects[f"s{sujeto}"].keys()) #imprimimos las llaves del diccionario

print(setSubjects[f"s{sujeto}"]["eeg"].shape) #imprimimos la forma del dato en "eeg"
# Obtenemos un arreglo que se corresponde con lo mencionado en la referencia
# [Number of targets, Number of channels, Number of sampling points, Number of trials]


"""Grafiquemos los datos obtenidos para el sujeto en 1 canal y el blanco de 9.25Hz"""

eeg = setSubjects[f"s{sujeto}"]["eeg"]
clases = eeg.shape[0] #clases del sujeto 1
channels = eeg.shape[1] #canales del sujeto 
samples= eeg.shape[2] #cantidad de muestras
trials= eeg.shape[3] # cantidad de trials

target = 1 #el máximo es 12

fm = 256.0

"""
Los autores del set de datos, citan:
    The onset of visual stimulation is at 39th sample point,
    which means there are redundant data for 0.15 [s] before stimulus onset.
    
Con esto en mente es que se descartan las primeras 39 muestras
"""

tiempoTotal = int(4*fm) #cantidad de muestras para 4segundos
muestraDescarte = 39

eeg = eeg[:,:, muestraDescarte: ,:]
eeg = eeg[:,:, :tiempoTotal ,:]

title = f"Señal de EEG sin filtro sujeto {sujeto}"
plotEEG(signal = eeg, sujeto = sujeto,
        trial = 3, blanco = target, window = [0,4], fm = 256.0, save = False, title = title)


eegfiltrado = filterEEG(eeg, lfrec = 5., hfrec = 80., orden = 4, fm  = 256.0)

title = f"Señal de EEG filtrada sujeto {sujeto}"

plotEEG(eegfiltrado, sujeto = sujeto,
        trial = 3, blanco = target, window = [0,4], fm = 256.0, save = False,
        title = title)

espectroSujeto = dict()

fftpar = {
    'resolución': 0.25, #fm/cantidad de muestras
    'frecuencia inicio': 0.0,
    'frecuencia final': 35.0,
    'fm': 256.0
} #parámetros importantes para aplicar la FFT

frecStimulus = np.array([9.25])

ventana = 4
solapamiento = ventana*1
canal = 1

#Realizo la segmentación de mi señal de EEG con ventana y el solapamiento dados
eegSSegmentedo = segmentingEpochs(eegfiltrado, ventana, solapamiento, fm)

espectroSujeto[f"s{sujeto}"] = getSpectrum(eegSSegmentedo, fftpar)

umbral = 0.04

#Grafico el espectro y obtengo maximos en la señal dada

plotSpectrum(umbral, espectroSujeto[f"s{sujeto}"], fftpar["resolución"], clases, 
              sujeto, canal, frecStimulus, save = False)